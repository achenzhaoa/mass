/**
 * convert the @if statement to function
 * beacuse call is a expression(means have value), sometimes can simplify our code
 * __example__:
 * $max = 100px;
 * left: $if( $max >= 100px, 300px, 600px);
 * 
 */
$if = ($test, $then, $alt){
    @if len($arguments) < 2 { error('$if at leat 2 param')}
    @if $test{
       @return $then; 
    }
    @return $alt;
}

/**
 * just like object in javascript, in mcss try use valueslist to fake a object
 * and use $map to get the value
 *
 * __example__ :;
 * $list = one 1, two  (2 3), three (3, 4, 5);
 *          
 * $map($list, two) // => 2 3
 * __warn__: if the list value use paren to wrap it force it as a expression;
 */
$map = ($list, $key){
  @if typeof($list) != 'valueslist'{
    error('must valueslist')
  }
  @for $li,$i in $list{
    @if $i == $key{
      @return $li;
    }
  }
  @return null;
}


/**
 * prefixr a __declaration__ with $property and $value
 * the default vendors is webkit moz ms o
 */
$prefixr = ($property, $value , $vendors){
    $vendors ?= webkit moz ms o;
    @if $value == null {
        @return {
            @return $prefixr($property, $arguments, $vendors);
        }
    }
    @for $vendor of $vendors {
        #{'-' + $vendor + '-' + $property} : $value;
    }
    #{$property} : $value;
}

// @debug $if(1, 2, 3);
// @debug $map((
//     one (1,2,3), 
//     two (2,3,4), 
//     three (3,4,5)
//     ), three);

// $border-radius = $prefixr('border-radius', null);
// $border-box = $prefixr('border-box', null, hello);

// body{
//     $border-radius: 10px solid #fff, 20px solid;
//     $border-box: $prefixr;
// }


$ops-map = 
  left right,
  right left,
  top bottom,
  bottom top;

$opposite = ($value){
  @if is-list($value){
    @return $map($ops-map, index($value, 0)) $map($ops-map, index($value, 1));
  }
  @return $map($ops-map, $value); 
}


$prefix-transition = ($properties){
  @if typeof($properties) == 'valueslist' {
    
  }
}




/**
 * other private functions
 */
$linear-pos = ($pos){
  $type-pos = typeof($pos);
  $corner-or-side = null;
  @if $type-pos == 'values' {
    $nth0 = index($pos, 0);
    @if $nth0 == to { //spec version means end position
        $corner-or-side = $opposite(slice($pos, 1));
    }@else{           // start position
        $corner-or-side = $pos;
    }
  }@else{
    $corner-or-side = $pos;
  }
  @return $corner-or-side;
}

$get-stop-color = ($color-stop){
    @if is-list($color-stop){
        @return index($color-stop, 0)
    }
    @return $color-stop;
}

$linear-gradient = ($pos, $color-stops...){
  $type-pos = typeof($pos);
  $deg = null;
  // @debug index($pos, 0);
  @if $type-pos == 'color' || ($type-pos == 'values' && typeof(index($pos, 0)) == 'color' ){
    push($color-stops, $pos);
    $pos = null;
  }
  @if $type-pos == 'dimension' {
      $deg = $pos;
  }@else {
      $pos = $linear-pos($pos);
  }
  $start = $get-stop-color(index($color-stops, 0));
  $end = $get-stop-color(index($color-stops, len($color-stops) - 1));
  $fallback = mix($start, $end);

  // @if $pos{
  //   @if typeof($pos) == 'dimension'{
  //     push($color-stops, $pos); // means degree
  //   }@else{
  //     push($color-stops, to $pos);
  //   }
  // }
  $specs = $color-stops;
  $other = slice($color-stops);
  $gradient-type = null;
  @if $deg != null {
     unshift($specs, $deg);
     unshift($other, $deg);
     @if $deg == 0deg{
        $gradient-type = 1;
     }@elseif $deg == -90deg{
        $type = 0; 
     }
  }@elseif($pos != null){
     unshift($specs, to $opposite($pos));
     unshift($other, $pos);
     @if $pos == left{
        $gradient-type = 1;
     }@elseif $pos == top{
        $gradient-type = 0;
     }
  }@else{ // default top -> bottom
     $gradient-type = 0;
  }
  background-color: $fallback; //fallback
  background-image: -webkit-linear-gradient($other); // chrome 2+ safari 4+
  background-image: -moz-linear-gradient($other); // ff
  background-image: -ms-linear-gradient($other); //ie10
  background-image: -o-linear-gradient($other); //opeator
  background-image: linear-gradient($specs); //spec
  // @REMOVE hack for lt ie9 
  @if $gradient-type != null{
    filter: t("progid:DXImageTransform.Microsoft.gradient(startColorstr='%s', endColorstr='%s', GradientType=%s)" % (argb($start), argb($end), $gradient-type)) \9;
  }
}

// close ie hack support
$ie-reset-gradient = {
  filter: t("progid:DXImageTransform.Microsoft.gradient(enabled = false)");
}

$radial-gradient = ($color-stops...) {
    $start = $get-stop-color(index($color-stops, 0));
    $end = $get-stop-color(index($color-stops, len($color-stops) - 1));
    $fallback = mix($start, $end);
    unshift($color-stops, ellipse);
    background-color: $fallback;
    background-image: -webkit-radial-gradient($color-stops);
    background-image: -moz-radial-gradient($color-stops);
    background-image: -ms-radial-gradient($color-stops);
    background-image: -o-radial-gradient($color-stops);
    background-image: radial-gradient($color-stops);
    background-repeat: no-repeat;
}



